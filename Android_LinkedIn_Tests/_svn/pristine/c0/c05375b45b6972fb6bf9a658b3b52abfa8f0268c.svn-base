<?xml version="1.0" encoding="UTF-8"?>
<Review id="vasily.gancharov">
  <ReviewIssue id="H77GJ904">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 14:55:01:204 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 15:38:27:896 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="22">src/com/linkedin/android/tests/data/ViewIdName.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>ViewIdName was changed from enum to class</Summary>
    <Description>ViewIdName was changed from enum to class. Now all resource ids will be stored in screens in which they used.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H77GY69O">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 15:06:37:500 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 15:55:49:408 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="28">src/com/linkedin/android/screens/common/ScreenExpose.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>ScreenExpose</Summary>
    <Description>Please review all methods from this class.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H77HQZ0X">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 15:29:01:137 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 15:59:48:626 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="34">src/com/linkedin/android/tests/data/Id.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>getViewByName was refactored</Summary>
    <Description>public static View getViewByName(ViewIdName idName) {
        Solo solo = DataProvider.getInstance().getSolo();
        int viewId = getIdByName(idName);
        View view = solo.getView(viewId);
        if (null == view) {
            Logger.logElements(true, true);
            Assert.fail("Can't get View by name: " + idName);
        }
        return view;
    }</Description>
    <Annotation>Please remove all debug logs from code after complete!</Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.invalidWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H77JNU3R">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 16:22:34:023 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 16:38:26:503 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="49">src/com/linkedin/android/tests/data/Id.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>getIdByName (debug logs were removed)</Summary>
    <Description>private static int getIdByName(ViewIdName idName) {
        Solo solo = DataProvider.getInstance().getSolo();
        Activity currentActivity = solo.getCurrentActivity();
        Assert.assertNotNull("There is no current activity", currentActivity);

        Resources currentResources = currentActivity.getResources();
        Assert.assertNotNull("There is no resources on current activity", currentResources);

        int id = currentResources.getIdentifier(idName.toString(), null, null);

        Assert.assertTrue("Can't get ID by name: " + idName, id &gt; 0);
        return id;
    }</Description>
    <Annotation></Annotation>
    <Revision>getIdByName</Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H77M4D40">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 17:31:24:384 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 18:00:45:952 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="67">src/com/linkedin/android/screens/updates/ScreenUpdates.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>getLinkedInTodayBannerText</Summary>
    <Description>"Can't wait for LINKEDIN TODAY text" error occur in ScreenUpdates - issue fixed;</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H77QO5QY">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 19:38:46:426 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-17 :: 20:06:47:348 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="203">src/com/linkedin/android/screens/common/ScreenExpose.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>visibility verification was fixed in assertExposeMenuTextView method (ScreenExpose class);</Summary>
    <Description>Assert.assertTrue("'" + textViewText + "' TextView not shown", textView.getVisibility() == View.VISIBLE);</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H78NMR22">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-18 :: 11:01:28:058 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-18 :: 11:52:20:547 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="59">src/com/linkedin/android/screens/common/ScreenNewMessage.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>tapOnSendButton () - verification of "Sending message" and "Message sent" toasts added</Summary>
    <Description>public void tapOnSendButton() {
        Button sendButton = getSolo().getButton(0);
        verifyTwoToastsStart("Sending message", "Message sent");
        ViewUtils.tapOnView(sendButton, "'Send' button");
        verifyTwoToastsEnd();
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AIP8MG">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 18:18:58:408 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:37:06:479 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="25">src/com/linkedin/android/screens/base/BaseDiscussionDetailsScreen.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>BaseDiscussionDetailsScreen</Summary>
    <Description>Review BaseDiscussionDetailsScreen class (Separated review points were created for all new methods. Other methods were moved from ScreenDiscussionDetails class).</Description>
    <Annotation>1. waitForMe - why waitMultiplyActivities? We wait 1 Activity. 2. Rename tapOnLikeButton() -&gt; likeDiscussion(). It is not simple tap - it all checks for this action. Accordingly correct comment to method. 3. I see toast. Sometimes (it very fast). But please - implement TODO - test not finished. 4. getLikesNumber - I think that we not need in NO_LIKES_NUMBER - if discussion not have likes it MUST return zero - not other value. 5. For Java methods with names starts from "get" (getters) comment must starts from "Returns". 6. Rename getNumberFromLikesCounterText -&gt; getNumberPeoplesWhoLiked. </Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.invalidWontfix</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AIQO7G">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 18:20:05:260 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:38:07:658 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="60">src/com/linkedin/android/screens/base/BaseDiscussionDetailsScreen.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>getLikeButton</Summary>
    <Description>public ImageButton getLikeButton() {
        return getSolo().getImageButton(LIKE_BUTTON_INDEX);
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AITIV4">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 18:22:18:304 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:38:16:386 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="69">src/com/linkedin/android/screens/base/BaseDiscussionDetailsScreen.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>getCommentButton</Summary>
    <Description>public ImageButton getCommentButton() {
        return getSolo().getImageButton(COMMENT_BUTTON_INDEX);
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AITXZF">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 18:22:37:899 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:38:27:203 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="76">src/com/linkedin/android/screens/base/BaseDiscussionDetailsScreen.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>assertLikeButton</Summary>
    <Description>public void assertLikeButton() {
        ImageButton likeButton = getLikeButton();
        ViewAssertUtils.assertViewIsPlacedInLayout(
                "'Like' button is not present (or its coordinates are wrong)", likeButton,
                LayoutUtils.LOWER_LEFT_OF_2_BUTTONS_LAYOUT);
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AIVGDI">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 18:23:48:390 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:38:33:643 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="86">src/com/linkedin/android/screens/base/BaseDiscussionDetailsScreen.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>assertCommentButton</Summary>
    <Description>public void assertCommentButton()
    {
        ImageButton commentButton = getCommentButton();
        ViewAssertUtils.assertViewIsPlacedInLayout(
                "'Comment' button is not present (or its coordinates are wrong)", commentButton,
                LayoutUtils.LOWER_RIGHT_OF_2_BUTTONS_LAYOUT);
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AIWHL8">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 18:24:36:620 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:38:41:916 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="124">src/com/linkedin/android/screens/base/BaseDiscussionDetailsScreen.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>tapOnDiscussionAuthorProfile</Summary>
    <Description>public void tapOnDiscussionAuthorProfile() {
        View discussionAuthorSectionChevron = Id.getViewByName(DISCUSSION_AUTHOR_SECTION_CHEVRON);
        Assert.assertNotNull("There is no chevron in 'Discussion author' section", discussionAuthorSectionChevron);
        
        getSolo().clickOnView(discussionAuthorSectionChevron);
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AJK84L">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 18:43:04:101 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:40:21:272 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="14">src/com/linkedin/android/screens/more/ScreenDiscussionDetailsFromRecentUpdates.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>ScreenDiscussionDetailsFromRecentUpdates</Summary>
    <Description>ScreenDiscussionDetailsFromRecentUpdates was added. Review the class entirely.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AJTBE2">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 18:50:08:234 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:41:42:515 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="159">src/com/linkedin/android/screens/updates/ScreenUpdates.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>tapOnFirstGroupPost</Summary>
    <Description>public void tapOnFirstGroupPost() {
        TextView nameOfGroupFromFirstGroupPost = searchFirstGroupPost();
        Assert.assertNotNull("There is no Group posts on current screen",
                nameOfGroupFromFirstGroupPost);

        getSolo().clickOnView(nameOfGroupFromFirstGroupPost);
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AJTT3U">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 18:50:31:194 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:42:11:749 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="173">src/com/linkedin/android/screens/updates/ScreenUpdates.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>searchFirstGroupPost</Summary>
    <Description>public TextView searchFirstGroupPost() {
        final String groupLabelFromGroupPost = "Group:";

        ArrayList&lt;TextView&gt; nonNameOfGroupTextViews = new ArrayList&lt;TextView&gt;();
        TextView nameOfGroupFromFirstGroupPost = null;
        do {
            getSolo().searchText(groupLabelFromGroupPost);
            nameOfGroupFromFirstGroupPost = ViewUtils.searchTextViewInActivity(
                    groupLabelFromGroupPost, nonNameOfGroupTextViews, false);
            if (isNameOfGroupFromGroupPost(nameOfGroupFromFirstGroupPost)) {
                return nameOfGroupFromFirstGroupPost;
            }
            nonNameOfGroupTextViews.add(nameOfGroupFromFirstGroupPost);
        } while (null != nameOfGroupFromFirstGroupPost);

        return null;
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AJUF8F">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 18:50:59:871 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:43:09:711 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="199">src/com/linkedin/android/screens/updates/ScreenUpdates.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>isNameOfGroupFromGroupPost</Summary>
    <Description>private boolean isNameOfGroupFromGroupPost(TextView textView) {
        final int nameOfGroupFromGroupPostIndex = 1;

        if (null == textView) {
            return false;
        }

        ViewParent textViewParent = textView.getParent();
        if (!(textViewParent instanceof RelativeLayout)) {
            return false;
        }
        RelativeLayout textViewParentLayout = (RelativeLayout) textViewParent;
        TextView groupName = ViewGroupUtils.getChildViewByIndexSafely(textViewParentLayout,
                nameOfGroupFromGroupPostIndex, TextView.class);
        if (textView != groupName) {
            return false;
        }

        ViewParent textViewParent2Degree = textViewParentLayout.getParent();
        if (!(textViewParent2Degree instanceof RelativeLayout)) {
            return false;
        }

        ViewParent textViewParent3Degree = textViewParent2Degree.getParent();
        if (!(textViewParent3Degree instanceof RelativeLayout)) {
            return false;
        }

        ViewParent textViewParent4Degree = textViewParent3Degree.getParent();
        if (!(textViewParent4Degree instanceof LinearLayout)) {
            return false;
        }

        View recentUpdatesList = (View) textViewParent4Degree.getParent();
        return recentUpdatesList instanceof ListView;
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AOJSG7">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 21:02:41:863 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 18:36:15:109 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="58">src/com/linkedin/android/screens/more/ScreenCommentDiscussion.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>tapOnSendButton (toasts verification was added)</Summary>
    <Description>public void tapOnSendButton() {
        Button sendButton = getSolo().getButton("Send");
        Assert.assertNotNull("There is no 'Send' button on current screen", sendButton);
        verifyTwoToastsStart("Posting comment", "Comment sent");
        ViewUtils.tapOnView(sendButton, "'Send' button");
        verifyTwoToastsEnd();
    }</Description>
    <Annotation>Please rename tapOnSendButton() -&gt; sendComment(). It not simple tap - it additional checks that sending works as expected. Accordingly correct comment to method.</Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.invalidWontfix</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AOMDMY">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 21:04:42:634 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:49:45:496 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="220">src/com/linkedin/android/screens/base/BaseDiscussionDetailsScreen.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>getNumberFromLikesCounterText</Summary>
    <Description>private int getNumberFromLikesCounterText(String likesCounterText) {
        if (null == likesCounterText) {
            return NO_LIKES_NUMBER;
        }

        likesCounterText = likesCounterText.replaceAll(PEOPLE_LIKE_THIS_COUNTER_LABEL,
                StringDefaultValues.EMPTY_STRING);
        likesCounterText = likesCounterText.trim();

        int likesNumber = IntegerUtils.getValueOfSafely(likesCounterText, NO_LIKES_NUMBER);
        return likesNumber;
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AOMOHA">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 21:04:56:686 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:50:01:897 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="203">src/com/linkedin/android/screens/base/BaseDiscussionDetailsScreen.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>getLikesCounter</Summary>
    <Description>public TextView getLikesCounter() {
        HardwareActions.scrollUp();
        TextView peopleLikeThisCounter = ViewUtils.searchTextViewInActivity(
                PEOPLE_LIKE_THIS_COUNTER_LABEL, false);
        return peopleLikeThisCounter;
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AONCR0">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 21:05:28:140 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:50:10:850 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="135">src/com/linkedin/android/screens/base/BaseDiscussionDetailsScreen.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>getLikesNumber</Summary>
    <Description>public int getLikesNumber() {
        TextView peopleLikeThisCounter = getLikesCounter();
        if (null == peopleLikeThisCounter) {
            return NO_LIKES_NUMBER;
        }

        String peopleLikeThisCounterText = peopleLikeThisCounter.getText().toString();
        int likesNumber = getNumberFromLikesCounterText(peopleLikeThisCounterText);
        return likesNumber;
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AONZIV">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 21:05:57:655 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:50:20:802 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="102">src/com/linkedin/android/screens/base/BaseDiscussionDetailsScreen.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>tapOnLikeButton</Summary>
    <Description>public void tapOnLikeButton() {

        int likesNumberBeforeTap = getLikesNumber();

        ImageButton likeButton = getLikeButton();
        // TODO add toasts verification here
        ViewUtils.tapOnView(likeButton, "Like");

        int likesNumberAfterTap = getLikesNumber();
        TextView likesCounter = getLikesCounter();

        Assert.assertNotNull(
                "'people like this' label is not presented after tapping on 'Like' button",
                likesCounter);
        Assert.assertTrue("Wrong number of likes",
                likesNumberBeforeTap &lt; likesNumberAfterTap);
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7AOXATD">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-19 :: 21:13:12:193 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 11:49:35:407 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="1220">src/com/linkedin/android/tests/UpdatesScreenTests.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>test35974273</Summary>
    <Description>public void test35974273() {
        // TODO uncomment when fixtures will be recorded for the test
        // startFixture("35974273");
        Logger.i(START_TEST + "35974273: 'NUS- Group Post.'");

        // Login and open Updates screen.
        ScreenUpdates updatesScreen = LoginActions.openUpdatesScreenOnStart();

        // Open first found Group Post.
        ScreenDiscussionDetailsFromRecentUpdates screenDiscussionDetailsFromRecentUpdates = updatesScreen
                .openDiscussionDetailsOfFirstGroupPost();
        Logger.i(DONE + "The Group Post details page is shown");

        // Tap on discussion author profile
        screenDiscussionDetailsFromRecentUpdates.tapOnDiscussionAuthorProfile();
        ScreenProfileOfConnectedUser screenProfileOfConnectedUser = new ScreenProfileOfConnectedUser();
        Logger.i(DONE + "The Group Post author profile page is shown");

        // Back to Group Post screen
        HardwareActions.pressBack();
        screenDiscussionDetailsFromRecentUpdates = new ScreenDiscussionDetailsFromRecentUpdates();

        // TODO verify toasts
        // Tap on like button. Verify update liked toast is shown and "N people like this" is shown.
        screenDiscussionDetailsFromRecentUpdates.tapOnLikeButton();
        Logger.i(DONE + "Update liked toast is shown and 'N people like this' is shown");

        // Open Comment screen
        ScreenCommentDiscussion screenCommentDiscussion = screenDiscussionDetailsFromRecentUpdates
                .openCommentScreen();
        Logger.i(DONE + "Comment screen is shown");
        
        // Type comment
        screenCommentDiscussion.typeRandomDetailTextOfDiscussion();
        
        // Tap on Send button. Verify "Posting comment" and "Comment sent" toasts shown.
        screenCommentDiscussion.tapOnSendButton();
        Logger.i(DONE + "'Posting comment' and 'Comment sent' toasts were shown");
        screenDiscussionDetailsFromRecentUpdates = new ScreenDiscussionDetailsFromRecentUpdates();
        
        // Back to Updates screen
        HardwareActions.pressBack();
        updatesScreen = new ScreenUpdates();
        Logger.i(DONE + "Updates screen is shown");

        Logger.i(PASS + "35974273");
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.closed</Status>
  </ReviewIssue>
  <ReviewIssue id="H7BZ5TEN">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 18:47:31:871 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-20 :: 19:43:57:099 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="407">src/com/linkedin/android/tests/UpdatesScreenTests.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary></Summary>
    <Description></Description>
    <Annotation>Why issue is empty? Please write helper/test name in field 'Summary'</Annotation>
    <Revision>test 34066763 was refactored</Revision>
    <Resolution>item.resolution.label.validWontfix</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="H7D807KN">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-21 :: 15:42:53:015 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-21 :: 15:43:00:406 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="749">src/com/linkedin/android/screens/updates/ScreenUpdates.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>getFirstNewsArticleSharedByCurrentUserWithoutComment</Summary>
    <Description>public LinearLayout getFirstNewsArticleSharedByCurrentUserWithoutComment(
            String newsArticleHeader) {

        if (null == newsArticleHeader) {
            return null;
        }

        ArrayList&lt;TextView&gt; nonNewsArticleSummarySharedByCurrentUserWithoutCommentTextViews = new ArrayList&lt;TextView&gt;();
        TextView newsArticleSummarySharedByCurrentUserWithoutCommentTextViews = null;

        do {
            newsArticleSummarySharedByCurrentUserWithoutCommentTextViews = ViewUtils
                    .searchTextViewInActivity(
                            NEWS_ARTICLE_SUMMARY_SHARED_BY_CURRENT_USER_WITHOUT_COMMENT, true);
            LinearLayout firstNewsArticleSharedByCurrentUserWithoutComment = getNewsArticleSharedByCurrentUserWithoutComment(
                    newsArticleSummarySharedByCurrentUserWithoutCommentTextViews, newsArticleHeader);
            if (null != firstNewsArticleSharedByCurrentUserWithoutComment) {
                return firstNewsArticleSharedByCurrentUserWithoutComment;
            }
            nonNewsArticleSummarySharedByCurrentUserWithoutCommentTextViews
                    .add(newsArticleSummarySharedByCurrentUserWithoutCommentTextViews);
        } while (null != newsArticleSummarySharedByCurrentUserWithoutCommentTextViews);
        return null;
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="H7D80IN7">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-21 :: 15:43:07:363 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-21 :: 15:43:16:893 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="789">src/com/linkedin/android/screens/updates/ScreenUpdates.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>getNewsArticleSharedByCurrentUserWithoutComment</Summary>
    <Description>private LinearLayout getNewsArticleSharedByCurrentUserWithoutComment(TextView textView,
            String newsArticleHeader) {
        final int imageDisplayedAlongWithSummaryIndex = 0;
        final int newsArticleSummarySharedByCurrentUserWithoutCommentIndex = 1;
        final int newsArticleHeaderSharedByCurrentUserWithoutCommentIndex = 4;

        if (null == textView) {
            return null;
        }

        ViewParent textViewParent = textView.getParent();
        if (!(textViewParent instanceof RelativeLayout)) {
            return null;
        }

        RelativeLayout textViewParentLayout = (RelativeLayout) textViewParent;
        TextView newsArticleSummarySharedByCurrentUserWithoutComment = ViewGroupUtils
                .getChildViewByIndexSafely(textViewParentLayout,
                        newsArticleSummarySharedByCurrentUserWithoutCommentIndex, TextView.class);
        if (textView != newsArticleSummarySharedByCurrentUserWithoutComment) {
            return null;
        }

        // Verify if image displayed along with summary.
        ImageView imageDisplayedAlongWithSummary = ViewGroupUtils.getChildViewByIndexSafely(
                textViewParentLayout, imageDisplayedAlongWithSummaryIndex, ImageView.class);

        if (null == imageDisplayedAlongWithSummary) {
            return null;
        }

        ViewParent textViewParent2Degree = textViewParentLayout.getParent();
        if (!(textViewParent2Degree instanceof RelativeLayout)) {
            return null;
        }

        // Verify if 2 degree parent layout contains news article header
        RelativeLayout textViewParentLayout2Degree = (RelativeLayout) textViewParent2Degree;
        TextView newsArticleHeaderSharedByCurrentUserWithoutComment = ViewGroupUtils
                .getChildViewByIndexSafely(textViewParentLayout2Degree,
                        newsArticleHeaderSharedByCurrentUserWithoutCommentIndex, TextView.class);

        if (null == newsArticleHeaderSharedByCurrentUserWithoutComment) {
            return null;
        }

        // Verify if retrieved news article header equals to newsArticleHeader
        String retrievedNewsArticleHeader = newsArticleHeaderSharedByCurrentUserWithoutComment
                .getText().toString();

        if (!retrievedNewsArticleHeader.equals(newsArticleHeader)) {
            return null;
        }

        ViewParent textViewParent3Degree = textViewParent2Degree.getParent();
        if (!(textViewParent3Degree instanceof RelativeLayout)) {
            return null;
        }

        ViewParent textViewParent4Degree = textViewParent3Degree.getParent();
        if (!(textViewParent4Degree instanceof LinearLayout)) {
            return null;
        }

        ViewParent updatesList = textViewParent4Degree.getParent();
        if (!(updatesList instanceof ListView)) {
            return null;
        }
        return (LinearLayout) textViewParent4Degree;
    }</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="H7D844NK">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-21 :: 15:45:55:856 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-21 :: 15:46:33:370 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="474">src/com/linkedin/android/tests/UpdatesScreenTests.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>test 34066709 was refactored</Summary>
    <Description></Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="H7D9G4C9">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-21 :: 16:23:14:937 MSK</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2012-09-21 :: 16:24:08:722 MSK</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>alexander.makarov</ReviewerId>
    <AssignedTo>alexander.makarov</AssignedTo>
    <File line="408">src/com/linkedin/android/tests/UpdatesScreenTests.java</File>
    <Type>item.type.label.other</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>test 34066763</Summary>
    <Description>startFixture("34066763"); - uncommented

String comment = "sDGaVWTAvq"; - randomly generated string was replaced with static one;</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
</Review>